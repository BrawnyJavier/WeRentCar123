// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeRentCar123.Context;

namespace WeRentCar123.Context.Migrations
{
    [DbContext(typeof(WeRentCar123Context))]
    partial class WeRentCar123ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeRentCar123.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<int>("VehicleModelID");

                    b.Property<string>("VehicleNotes");

                    b.HasKey("VehicleID");

                    b.HasIndex("VehicleModelID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WeRentCar123.Models.VehicleBrand", b =>
                {
                    b.Property<int>("VehicleBrandID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VehicleBrandDescription")
                        .HasMaxLength(600);

                    b.Property<DateTime>("VehicleBrandIntroductionDate");

                    b.Property<string>("VehicleBrandName")
                        .HasMaxLength(100);

                    b.HasKey("VehicleBrandID");

                    b.ToTable("VehicleBrands");
                });

            modelBuilder.Entity("WeRentCar123.Models.VehicleModel", b =>
                {
                    b.Property<int>("VehicleModelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("RecommendedRentalDailyPrice");

                    b.Property<int>("VehicleBrandID");

                    b.Property<string>("VehicleModelDescription")
                        .HasMaxLength(600);

                    b.Property<string>("VehicleModelName")
                        .HasMaxLength(100);

                    b.Property<int>("VehicleModelYear");

                    b.HasKey("VehicleModelID");

                    b.HasIndex("VehicleBrandID");

                    b.ToTable("VehicleModels");
                });

            modelBuilder.Entity("WeRentCar123.Models.VehicleRental", b =>
                {
                    b.Property<int>("VehicleRentalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DailyRentalPrice");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("RentFromDate");

                    b.Property<DateTime>("RentToDate");

                    b.Property<int?>("VehicleID");

                    b.Property<int?>("VehicleRentalClientId");

                    b.Property<DateTime>("VehicleRentalRegistrationDate");

                    b.HasKey("VehicleRentalID");

                    b.HasIndex("VehicleID");

                    b.HasIndex("VehicleRentalClientId");

                    b.ToTable("VehicleRentals");
                });

            modelBuilder.Entity("WeRentCar123.Models.VehicleRentalClient", b =>
                {
                    b.Property<int>("VehicleRentalClientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("ID")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100);

                    b.HasKey("VehicleRentalClientId");

                    b.ToTable("VehicleRentalClients");
                });

            modelBuilder.Entity("WeRentCar123.Models.Vehicle", b =>
                {
                    b.HasOne("WeRentCar123.Models.VehicleModel", "VehicleModel")
                        .WithMany()
                        .HasForeignKey("VehicleModelID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WeRentCar123.Models.VehicleModel", b =>
                {
                    b.HasOne("WeRentCar123.Models.VehicleBrand", "VehicleBrand")
                        .WithMany("VehicleModels")
                        .HasForeignKey("VehicleBrandID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WeRentCar123.Models.VehicleRental", b =>
                {
                    b.HasOne("WeRentCar123.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID");

                    b.HasOne("WeRentCar123.Models.VehicleRentalClient", "VehicleRentalClient")
                        .WithMany()
                        .HasForeignKey("VehicleRentalClientId");
                });
#pragma warning restore 612, 618
        }
    }
}
